name: Deploy Web App to Google Cloud Run

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'App.js'
      - 'index.js'
      - 'package.json'
      - 'app.json'
      - 'Dockerfile'
      - 'web-server.js'
      - 'web/**'
      - '.github/workflows/deploy-web.yml'
  workflow_dispatch:

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID || secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: speakeasy-web
  BACKEND_URL: ${{ vars.WEB_BACKEND_URL || vars.BACKEND_URL }}
  ARTIFACT_REPOSITORY: ${{ vars.GCP_ARTIFACT_REPOSITORY || 'cloud-run' }}

jobs:
  deploy:
    name: Deploy Web App
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build Docker image
        run: |
          docker build -f Dockerfile \
                       -t us-central1-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPOSITORY/$SERVICE_NAME:$GITHUB_SHA \
                       -t us-central1-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPOSITORY/$SERVICE_NAME:latest \
                       --build-arg BACKEND_URL=${BACKEND_URL:-} \
                       .

      - name: Push Docker image to Artifact Registry
        run: |
          docker push us-central1-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPOSITORY/$SERVICE_NAME:$GITHUB_SHA
          docker push us-central1-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPOSITORY/$SERVICE_NAME:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image us-central1-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPOSITORY/$SERVICE_NAME:$GITHUB_SHA \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --memory 512Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 100

      - name: Get service URL
        id: get-url
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME \
            --region $REGION \
            --format 'value(status.url)')
          echo "url=$SERVICE_URL" >> $GITHUB_OUTPUT
          echo "Web app deployed to: $SERVICE_URL"

      - name: Map custom domain (if configured)
        if: github.ref == 'refs/heads/main'
        run: |
          gcloud run domain-mappings create \
            --service $SERVICE_NAME \
            --domain speakeasy-ai.app \
            --region $REGION || echo "Domain mapping may already exist"

      - name: Test deployment
        run: |
          sleep 10
          curl -f ${{ steps.get-url.outputs.url }}/health || exit 1
